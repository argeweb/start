{"version":3,"sources":["../../bower_components/keymaster/keymaster.js"],"names":["global","index","array","item","i","length","compareArray","a1","a2","updateModifierKey","event","k","_mods","modifierMap","dispatch","key","handler","modifiersMatch","scope","keyCode","_downKeys","push","_MODIFIERS","assignKey","filter","call","this","_handlers","getScope","mods","method","preventDefault","returnValue","stopPropagation","cancelBubble","clearModifier","splice","resetModifiers","keys","getKeys","undefined","split","getMods","code","shortcut","unbindKey","multipleKeys","j","obj","isPressed","getPressedKeyCodes","slice","tagName","target","srcElement","setScope","_scope","deleteScope","handlers","replace","mi","addEvent","object","addEventListener","attachEvent","window","noConflict","previousKey","16","18","17","91","⇧","shift","⌥","alt","option","⌃","ctrl","control","⌘","command","_MAP","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","home","end","pageup","pagedown",",",".","/","`","-","=",";","'","[","]","\\","x","toUpperCase","charCodeAt","document","unbind","module","exports"],"mappings":"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","file":"keymaster.min.js","sourcesContent":["//     keymaster.js\r\n//     (c) 2011-2013 Thomas Fuchs\r\n//     keymaster.js may be freely distributed under the MIT license.\r\n\r\n;(function(global){\r\n  var k,\r\n    _handlers = {},\r\n    _mods = { 16: false, 18: false, 17: false, 91: false },\r\n    _scope = 'all',\r\n    // modifier keys\r\n    _MODIFIERS = {\r\n      '⇧': 16, shift: 16,\r\n      '⌥': 18, alt: 18, option: 18,\r\n      '⌃': 17, ctrl: 17, control: 17,\r\n      '⌘': 91, command: 91\r\n    },\r\n    // special keys\r\n    _MAP = {\r\n      backspace: 8, tab: 9, clear: 12,\r\n      enter: 13, 'return': 13,\r\n      esc: 27, escape: 27, space: 32,\r\n      left: 37, up: 38,\r\n      right: 39, down: 40,\r\n      del: 46, 'delete': 46,\r\n      home: 36, end: 35,\r\n      pageup: 33, pagedown: 34,\r\n      ',': 188, '.': 190, '/': 191,\r\n      '`': 192, '-': 189, '=': 187,\r\n      ';': 186, '\\'': 222,\r\n      '[': 219, ']': 221, '\\\\': 220\r\n    },\r\n    code = function(x){\r\n      return _MAP[x] || x.toUpperCase().charCodeAt(0);\r\n    },\r\n    _downKeys = [];\r\n\r\n  for(k=1;k<20;k++) _MAP['f'+k] = 111+k;\r\n\r\n  // IE doesn't support Array#indexOf, so have a simple replacement\r\n  function index(array, item){\r\n    var i = array.length;\r\n    while(i--) if(array[i]===item) return i;\r\n    return -1;\r\n  }\r\n\r\n  // for comparing mods before unassignment\r\n  function compareArray(a1, a2) {\r\n    if (a1.length != a2.length) return false;\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a1[i] !== a2[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  var modifierMap = {\r\n      16:'shiftKey',\r\n      18:'altKey',\r\n      17:'ctrlKey',\r\n      91:'metaKey'\r\n  };\r\n  function updateModifierKey(event) {\r\n      for(k in _mods) _mods[k] = event[modifierMap[k]];\r\n  };\r\n\r\n  // handle keydown event\r\n  function dispatch(event) {\r\n    var key, handler, k, i, modifiersMatch, scope;\r\n    key = event.keyCode;\r\n\r\n    if (index(_downKeys, key) == -1) {\r\n        _downKeys.push(key);\r\n    }\r\n\r\n    // if a modifier key, set the key.<modifierkeyname> property to true and return\r\n    if(key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\r\n    if(key in _mods) {\r\n      _mods[key] = true;\r\n      // 'assignKey' from inside this closure is exported to window.key\r\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = true;\r\n      return;\r\n    }\r\n    updateModifierKey(event);\r\n\r\n    // see if we need to ignore the keypress (filter() can can be overridden)\r\n    // by default ignore key presses if a select, textarea, or input is focused\r\n    if(!assignKey.filter.call(this, event)) return;\r\n\r\n    // abort if no potentially matching shortcuts found\r\n    if (!(key in _handlers)) return;\r\n\r\n    scope = getScope();\r\n\r\n    // for each potential shortcut\r\n    for (i = 0; i < _handlers[key].length; i++) {\r\n      handler = _handlers[key][i];\r\n\r\n      // see if it's in the current scope\r\n      if(handler.scope == scope || handler.scope == 'all'){\r\n        // check if modifiers match if any\r\n        modifiersMatch = handler.mods.length > 0;\r\n        for(k in _mods)\r\n          if((!_mods[k] && index(handler.mods, +k) > -1) ||\r\n            (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\r\n        // call the handler and stop the event if neccessary\r\n        if((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch){\r\n          if(handler.method(event, handler)===false){\r\n            if(event.preventDefault) event.preventDefault();\r\n              else event.returnValue = false;\r\n            if(event.stopPropagation) event.stopPropagation();\r\n            if(event.cancelBubble) event.cancelBubble = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // unset modifier keys on keyup\r\n  function clearModifier(event){\r\n    var key = event.keyCode, k,\r\n        i = index(_downKeys, key);\r\n\r\n    // remove key from _downKeys\r\n    if (i >= 0) {\r\n        _downKeys.splice(i, 1);\r\n    }\r\n\r\n    if(key == 93 || key == 224) key = 91;\r\n    if(key in _mods) {\r\n      _mods[key] = false;\r\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = false;\r\n    }\r\n  };\r\n\r\n  function resetModifiers() {\r\n    for(k in _mods) _mods[k] = false;\r\n    for(k in _MODIFIERS) assignKey[k] = false;\r\n  };\r\n\r\n  // parse and assign shortcut\r\n  function assignKey(key, scope, method){\r\n    var keys, mods;\r\n    keys = getKeys(key);\r\n    if (method === undefined) {\r\n      method = scope;\r\n      scope = 'all';\r\n    }\r\n\r\n    // for each shortcut\r\n    for (var i = 0; i < keys.length; i++) {\r\n      // set modifier keys if any\r\n      mods = [];\r\n      key = keys[i].split('+');\r\n      if (key.length > 1){\r\n        mods = getMods(key);\r\n        key = [key[key.length-1]];\r\n      }\r\n      // convert to keycode and...\r\n      key = key[0]\r\n      key = code(key);\r\n      // ...store handler\r\n      if (!(key in _handlers)) _handlers[key] = [];\r\n      _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\r\n    }\r\n  };\r\n\r\n  // unbind all handlers for given key in current scope\r\n  function unbindKey(key, scope) {\r\n    var multipleKeys, keys,\r\n      mods = [],\r\n      i, j, obj;\r\n\r\n    multipleKeys = getKeys(key);\r\n\r\n    for (j = 0; j < multipleKeys.length; j++) {\r\n      keys = multipleKeys[j].split('+');\r\n\r\n      if (keys.length > 1) {\r\n        mods = getMods(keys);\r\n      }\r\n\r\n      key = keys[keys.length - 1];\r\n      key = code(key);\r\n\r\n      if (scope === undefined) {\r\n        scope = getScope();\r\n      }\r\n      if (!_handlers[key]) {\r\n        return;\r\n      }\r\n      for (i = 0; i < _handlers[key].length; i++) {\r\n        obj = _handlers[key][i];\r\n        // only clear handlers if correct scope and mods match\r\n        if (obj.scope === scope && compareArray(obj.mods, mods)) {\r\n          _handlers[key][i] = {};\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Returns true if the key with code 'keyCode' is currently down\r\n  // Converts strings into key codes.\r\n  function isPressed(keyCode) {\r\n      if (typeof(keyCode)=='string') {\r\n        keyCode = code(keyCode);\r\n      }\r\n      return index(_downKeys, keyCode) != -1;\r\n  }\r\n\r\n  function getPressedKeyCodes() {\r\n      return _downKeys.slice(0);\r\n  }\r\n\r\n  function filter(event){\r\n    var tagName = (event.target || event.srcElement).tagName;\r\n    // ignore keypressed in any elements that support keyboard data input\r\n    return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\r\n  }\r\n\r\n  // initialize key.<modifier> to false\r\n  for(k in _MODIFIERS) assignKey[k] = false;\r\n\r\n  // set current scope (default 'all')\r\n  function setScope(scope){ _scope = scope || 'all' };\r\n  function getScope(){ return _scope || 'all' };\r\n\r\n  // delete all handlers for a given scope\r\n  function deleteScope(scope){\r\n    var key, handlers, i;\r\n\r\n    for (key in _handlers) {\r\n      handlers = _handlers[key];\r\n      for (i = 0; i < handlers.length; ) {\r\n        if (handlers[i].scope === scope) handlers.splice(i, 1);\r\n        else i++;\r\n      }\r\n    }\r\n  };\r\n\r\n  // abstract key logic for assign and unassign\r\n  function getKeys(key) {\r\n    var keys;\r\n    key = key.replace(/\\s/g, '');\r\n    keys = key.split(',');\r\n    if ((keys[keys.length - 1]) == '') {\r\n      keys[keys.length - 2] += ',';\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  // abstract mods logic for assign and unassign\r\n  function getMods(key) {\r\n    var mods = key.slice(0, key.length - 1);\r\n    for (var mi = 0; mi < mods.length; mi++)\r\n    mods[mi] = _MODIFIERS[mods[mi]];\r\n    return mods;\r\n  }\r\n\r\n  // cross-browser events\r\n  function addEvent(object, event, method) {\r\n    if (object.addEventListener)\r\n      object.addEventListener(event, method, false);\r\n    else if(object.attachEvent)\r\n      object.attachEvent('on'+event, function(){ method(window.event) });\r\n  };\r\n\r\n  // set the handlers globally on document\r\n  addEvent(document, 'keydown', function(event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\r\n  addEvent(document, 'keyup', clearModifier);\r\n\r\n  // reset modifiers to false whenever the window is (re)focused.\r\n  addEvent(window, 'focus', resetModifiers);\r\n\r\n  // store previously defined key\r\n  var previousKey = global.key;\r\n\r\n  // restore previously defined key and return reference to our key object\r\n  function noConflict() {\r\n    var k = global.key;\r\n    global.key = previousKey;\r\n    return k;\r\n  }\r\n\r\n  // set window.key and window.key.set/get/deleteScope, and the default filter\r\n  global.key = assignKey;\r\n  global.key.setScope = setScope;\r\n  global.key.getScope = getScope;\r\n  global.key.deleteScope = deleteScope;\r\n  global.key.filter = filter;\r\n  global.key.isPressed = isPressed;\r\n  global.key.getPressedKeyCodes = getPressedKeyCodes;\r\n  global.key.noConflict = noConflict;\r\n  global.key.unbind = unbindKey;\r\n\r\n  if(typeof module !== 'undefined') module.exports = assignKey;\r\n\r\n})(this);\r\n"]}