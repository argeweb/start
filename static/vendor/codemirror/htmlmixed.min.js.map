{"version":3,"sources":["../../bower_components/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","maybeBackup","stream","pat","style","cur","current","close","search","backUp","length","match","getAttrRegexp","attr","regexp","attrRegexpCache","RegExp","getAttrValue","text","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","test","defaultTags","script","defineMode","config","parserConfig","html","state","htmlMode","token","htmlState","toLowerCase","tags","hasOwnProperty","inTag","modeSpec","mode","getMode","endTagA","endTag","localState","localMode","startState","indent","eol","name","multilineTagIndentFactor","multilineTagIndentPastTag","configTags","configScript","scriptTypes","matches","copyState","local","textAfter","Pass","innerMode","defineMIME"],"mappings":"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","file":"htmlmixed.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n\r\n(function(mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\r\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\r\n  else if (typeof define == \"function\" && define.amd) // AMD\r\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\r\n  else // Plain browser env\r\n    mod(CodeMirror);\r\n})(function(CodeMirror) {\r\n  \"use strict\";\r\n\r\n  var defaultTags = {\r\n    script: [\r\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\r\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^$/i, \"javascript\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"javascript\"]\r\n    ],\r\n    style:  [\r\n      [\"lang\", /^css$/i, \"css\"],\r\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"css\"]\r\n    ]\r\n  };\r\n\r\n  function maybeBackup(stream, pat, style) {\r\n    var cur = stream.current(), close = cur.search(pat);\r\n    if (close > -1) {\r\n      stream.backUp(cur.length - close);\r\n    } else if (cur.match(/<\\/?$/)) {\r\n      stream.backUp(cur.length);\r\n      if (!stream.match(pat, false)) stream.match(cur);\r\n    }\r\n    return style;\r\n  }\r\n\r\n  var attrRegexpCache = {};\r\n  function getAttrRegexp(attr) {\r\n    var regexp = attrRegexpCache[attr];\r\n    if (regexp) return regexp;\r\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\r\n  }\r\n\r\n  function getAttrValue(text, attr) {\r\n    var match = text.match(getAttrRegexp(attr))\r\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\r\n  }\r\n\r\n  function getTagRegexp(tagName, anchored) {\r\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\r\n  }\r\n\r\n  function addTags(from, to) {\r\n    for (var tag in from) {\r\n      var dest = to[tag] || (to[tag] = []);\r\n      var source = from[tag];\r\n      for (var i = source.length - 1; i >= 0; i--)\r\n        dest.unshift(source[i])\r\n    }\r\n  }\r\n\r\n  function findMatchingMode(tagInfo, tagText) {\r\n    for (var i = 0; i < tagInfo.length; i++) {\r\n      var spec = tagInfo[i];\r\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\r\n    var htmlMode = CodeMirror.getMode(config, {\r\n      name: \"xml\",\r\n      htmlMode: true,\r\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\r\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\r\n    });\r\n\r\n    var tags = {};\r\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\r\n    addTags(defaultTags, tags);\r\n    if (configTags) addTags(configTags, tags);\r\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\r\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\r\n\r\n    function html(stream, state) {\r\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\r\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\r\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\r\n          tags.hasOwnProperty(tagName)) {\r\n        state.inTag = tagName + \" \"\r\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\r\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\r\n        state.inTag = null\r\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\r\n        var mode = CodeMirror.getMode(config, modeSpec)\r\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\r\n        state.token = function (stream, state) {\r\n          if (stream.match(endTagA, false)) {\r\n            state.token = html;\r\n            state.localState = state.localMode = null;\r\n            return null;\r\n          }\r\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\r\n        };\r\n        state.localMode = mode;\r\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\"));\r\n      } else if (state.inTag) {\r\n        state.inTag += stream.current()\r\n        if (stream.eol()) state.inTag += \" \"\r\n      }\r\n      return style;\r\n    };\r\n\r\n    return {\r\n      startState: function () {\r\n        var state = CodeMirror.startState(htmlMode);\r\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\r\n      },\r\n\r\n      copyState: function (state) {\r\n        var local;\r\n        if (state.localState) {\r\n          local = CodeMirror.copyState(state.localMode, state.localState);\r\n        }\r\n        return {token: state.token, inTag: state.inTag,\r\n                localMode: state.localMode, localState: local,\r\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\r\n      },\r\n\r\n      token: function (stream, state) {\r\n        return state.token(stream, state);\r\n      },\r\n\r\n      indent: function (state, textAfter) {\r\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\r\n          return htmlMode.indent(state.htmlState, textAfter);\r\n        else if (state.localMode.indent)\r\n          return state.localMode.indent(state.localState, textAfter);\r\n        else\r\n          return CodeMirror.Pass;\r\n      },\r\n\r\n      innerMode: function (state) {\r\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\r\n      }\r\n    };\r\n  }, \"xml\", \"javascript\", \"css\");\r\n\r\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\r\n});\r\n"]}