{"version":3,"sources":["../../bower_components/jquery-pjax/jquery.pjax.js"],"names":["$","fnPjax","selector","container","options","context","this","on","event","opts","extend","optionsFor","attr","handleClick","link","currentTarget","tagName","toUpperCase","which","metaKey","ctrlKey","shiftKey","altKey","location","protocol","hostname","href","indexOf","stripHash","isDefaultPrevented","defaults","url","target","clickEvent","Event","trigger","pjax","preventDefault","handleSubmit","form","type","method","action","undefined","window","FormData","data","processData","contentType","find","length","serializeArray","fire","args","props","relatedTarget","ajaxSettings","isFunction","hash","parseURL","findContainerFor","isArray","push","name","value","_pjax","timeoutTimer","beforeSend","xhr","settings","timeout","setRequestHeader","setTimeout","abort","requestUrl","stripInternalParams","complete","textStatus","clearTimeout","error","errorThrown","extractContainer","allowed","locationReplace","success","status","previousState","state","currentVersion","version","latestVersion","getResponseHeader","contents","id","uniqueId","title","fragment","replace","history","replaceState","document","activeElement","blur","e","html","autofocusEl","last","focus","executeScriptTags","scripts","scrollTo","decodeURIComponent","slice","getElementById","getElementsByName","offset","top","scrollTop","abortXHR","ajax","readyState","cachePush","cloneContents","pushState","pjaxReload","onPjaxPopstate","initialPop","direction","initialURL","cache","cacheMapping","cachePop","popstateEvent","beforeReplaceEvent","offsetHeight","fallbackPjax","style","append","toLowerCase","each","split","index","pair","key","body","submit","onreadystatechange","noop","Date","getTime","cloned","clone","src","jQuery","_data","search","a","createElement","isPlainObject","findAll","elems","filter","add","parseHTML","obj","fullDocument","test","serverUrl","$head","match","$body","text","$fragment","first","not","is","remove","trim","existingScripts","matchedScripts","script","head","appendChild","cacheBackStack","trimCacheStack","cacheForwardStack","maxCacheLength","pushStack","popStack","pop","stack","shift","findVersion","enable","fn","disable","click","reload","dataType","off","initialState","inArray","support","navigator","userAgent"],"mappings":"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","file":"jquery.min.js","sourcesContent":["/*!\r\n * Copyright 2012, Chris Wanstrath\r\n * Released under the MIT License\r\n * https://github.com/defunkt/jquery-pjax\r\n */\r\n\r\n(function($){\r\n\r\n// When called on a container with a selector, fetches the href with\r\n// ajax into the container or with the data-pjax attribute on the link\r\n// itself.\r\n//\r\n// Tries to make sure the back button and ctrl+click work the way\r\n// you'd expect.\r\n//\r\n// Exported as $.fn.pjax\r\n//\r\n// Accepts a jQuery ajax options object that may include these\r\n// pjax specific options:\r\n//\r\n//\r\n// container - Where to stick the response body. Usually a String selector.\r\n//             $(container).html(xhr.responseBody)\r\n//             (default: current jquery context)\r\n//      push - Whether to pushState the URL. Defaults to true (of course).\r\n//   replace - Want to use replaceState instead? That's cool.\r\n//\r\n// For convenience the second parameter can be either the container or\r\n// the options object.\r\n//\r\n// Returns the jQuery object\r\nfunction fnPjax(selector, container, options) {\r\n  var context = this\r\n  return this.on('click.pjax', selector, function(event) {\r\n    var opts = $.extend({}, optionsFor(container, options))\r\n    if (!opts.container)\r\n      opts.container = $(this).attr('data-pjax') || context\r\n    handleClick(event, opts)\r\n  })\r\n}\r\n\r\n// Public: pjax on click handler\r\n//\r\n// Exported as $.pjax.click.\r\n//\r\n// event   - \"click\" jQuery.Event\r\n// options - pjax options\r\n//\r\n// Examples\r\n//\r\n//   $(document).on('click', 'a', $.pjax.click)\r\n//   // is the same as\r\n//   $(document).pjax('a')\r\n//\r\n//  $(document).on('click', 'a', function(event) {\r\n//    var container = $(this).closest('[data-pjax-container]')\r\n//    $.pjax.click(event, container)\r\n//  })\r\n//\r\n// Returns nothing.\r\nfunction handleClick(event, container, options) {\r\n  options = optionsFor(container, options)\r\n\r\n  var link = event.currentTarget\r\n\r\n  if (link.tagName.toUpperCase() !== 'A')\r\n    throw \"$.fn.pjax or $.pjax.click requires an anchor element\"\r\n\r\n  // Middle click, cmd click, and ctrl click should open\r\n  // links in a new tab as normal.\r\n  if ( event.which > 1 || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey )\r\n    return\r\n\r\n  // Ignore cross origin links\r\n  if ( location.protocol !== link.protocol || location.hostname !== link.hostname )\r\n    return\r\n\r\n  // Ignore case when a hash is being tacked on the current URL\r\n  if ( link.href.indexOf('#') > -1 && stripHash(link) == stripHash(location) )\r\n    return\r\n\r\n  // Ignore event with default prevented\r\n  if (event.isDefaultPrevented())\r\n    return\r\n\r\n  var defaults = {\r\n    url: link.href,\r\n    container: $(link).attr('data-pjax'),\r\n    target: link\r\n  }\r\n\r\n  var opts = $.extend({}, defaults, options)\r\n  var clickEvent = $.Event('pjax:click')\r\n  $(link).trigger(clickEvent, [opts])\r\n\r\n  if (!clickEvent.isDefaultPrevented()) {\r\n    pjax(opts)\r\n    event.preventDefault()\r\n    $(link).trigger('pjax:clicked', [opts])\r\n  }\r\n}\r\n\r\n// Public: pjax on form submit handler\r\n//\r\n// Exported as $.pjax.submit\r\n//\r\n// event   - \"click\" jQuery.Event\r\n// options - pjax options\r\n//\r\n// Examples\r\n//\r\n//  $(document).on('submit', 'form', function(event) {\r\n//    var container = $(this).closest('[data-pjax-container]')\r\n//    $.pjax.submit(event, container)\r\n//  })\r\n//\r\n// Returns nothing.\r\nfunction handleSubmit(event, container, options) {\r\n  options = optionsFor(container, options)\r\n\r\n  var form = event.currentTarget\r\n\r\n  if (form.tagName.toUpperCase() !== 'FORM')\r\n    throw \"$.pjax.submit requires a form element\"\r\n\r\n  var defaults = {\r\n    type: form.method.toUpperCase(),\r\n    url: form.action,\r\n    container: $(form).attr('data-pjax'),\r\n    target: form\r\n  }\r\n\r\n  if (defaults.type !== 'GET' && window.FormData !== undefined) {\r\n    defaults.data = new FormData(form);\r\n    defaults.processData = false;\r\n    defaults.contentType = false;\r\n  } else {\r\n    // Can't handle file uploads, exit\r\n    if ($(form).find(':file').length) {\r\n      return;\r\n    }\r\n\r\n    // Fallback to manually serializing the fields\r\n    defaults.data = $(form).serializeArray();\r\n  }\r\n\r\n  pjax($.extend({}, defaults, options))\r\n\r\n  event.preventDefault()\r\n}\r\n\r\n// Loads a URL with ajax, puts the response body inside a container,\r\n// then pushState()'s the loaded URL.\r\n//\r\n// Works just like $.ajax in that it accepts a jQuery ajax\r\n// settings object (with keys like url, type, data, etc).\r\n//\r\n// Accepts these extra keys:\r\n//\r\n// container - Where to stick the response body.\r\n//             $(container).html(xhr.responseBody)\r\n//      push - Whether to pushState the URL. Defaults to true (of course).\r\n//   replace - Want to use replaceState instead? That's cool.\r\n//\r\n// Use it just like $.ajax:\r\n//\r\n//   var xhr = $.pjax({ url: this.href, container: '#main' })\r\n//   console.log( xhr.readyState )\r\n//\r\n// Returns whatever $.ajax returns.\r\nfunction pjax(options) {\r\n  options = $.extend(true, {}, $.ajaxSettings, pjax.defaults, options)\r\n\r\n  if ($.isFunction(options.url)) {\r\n    options.url = options.url()\r\n  }\r\n\r\n  var target = options.target\r\n\r\n  var hash = parseURL(options.url).hash\r\n\r\n  var context = options.context = findContainerFor(options.container)\r\n\r\n  // We want the browser to maintain two separate internal caches: one\r\n  // for pjax'd partial page loads and one for normal page loads.\r\n  // Without adding this secret parameter, some browsers will often\r\n  // confuse the two.\r\n  if (!options.data) options.data = {}\r\n  if ($.isArray(options.data)) {\r\n    options.data.push({name: '_pjax', value: context.selector})\r\n  } else {\r\n    options.data._pjax = context.selector\r\n  }\r\n\r\n  function fire(type, args, props) {\r\n    if (!props) props = {}\r\n    props.relatedTarget = target\r\n    var event = $.Event(type, props)\r\n    context.trigger(event, args)\r\n    return !event.isDefaultPrevented()\r\n  }\r\n\r\n  var timeoutTimer\r\n\r\n  options.beforeSend = function(xhr, settings) {\r\n    // No timeout for non-GET requests\r\n    // Its not safe to request the resource again with a fallback method.\r\n    if (settings.type !== 'GET') {\r\n      settings.timeout = 0\r\n    }\r\n\r\n    xhr.setRequestHeader('X-PJAX', 'true')\r\n    xhr.setRequestHeader('X-PJAX-Container', context.selector)\r\n\r\n    if (!fire('pjax:beforeSend', [xhr, settings]))\r\n      return false\r\n\r\n    if (settings.timeout > 0) {\r\n      timeoutTimer = setTimeout(function() {\r\n        if (fire('pjax:timeout', [xhr, options]))\r\n          xhr.abort('timeout')\r\n      }, settings.timeout)\r\n\r\n      // Clear timeout setting so jquerys internal timeout isn't invoked\r\n      settings.timeout = 0\r\n    }\r\n\r\n    var url = parseURL(settings.url)\r\n    if (hash) url.hash = hash\r\n    options.requestUrl = stripInternalParams(url)\r\n  }\r\n\r\n  options.complete = function(xhr, textStatus) {\r\n    if (timeoutTimer)\r\n      clearTimeout(timeoutTimer)\r\n\r\n    fire('pjax:complete', [xhr, textStatus, options])\r\n\r\n    fire('pjax:end', [xhr, options])\r\n  }\r\n\r\n  options.error = function(xhr, textStatus, errorThrown) {\r\n    var container = extractContainer(\"\", xhr, options)\r\n\r\n    var allowed = fire('pjax:error', [xhr, textStatus, errorThrown, options])\r\n    if (options.type == 'GET' && textStatus !== 'abort' && allowed) {\r\n      locationReplace(container.url)\r\n    }\r\n  }\r\n\r\n  options.success = function(data, status, xhr) {\r\n    var previousState = pjax.state;\r\n\r\n    // If $.pjax.defaults.version is a function, invoke it first.\r\n    // Otherwise it can be a static string.\r\n    var currentVersion = (typeof $.pjax.defaults.version === 'function') ?\r\n      $.pjax.defaults.version() :\r\n      $.pjax.defaults.version\r\n\r\n    var latestVersion = xhr.getResponseHeader('X-PJAX-Version')\r\n\r\n    var container = extractContainer(data, xhr, options)\r\n\r\n    var url = parseURL(container.url)\r\n    if (hash) {\r\n      url.hash = hash\r\n      container.url = url.href\r\n    }\r\n\r\n    // If there is a layout version mismatch, hard load the new url\r\n    if (currentVersion && latestVersion && currentVersion !== latestVersion) {\r\n      locationReplace(container.url)\r\n      return\r\n    }\r\n\r\n    // If the new response is missing a body, hard load the page\r\n    if (!container.contents) {\r\n      locationReplace(container.url)\r\n      return\r\n    }\r\n\r\n    pjax.state = {\r\n      id: options.id || uniqueId(),\r\n      url: container.url,\r\n      title: container.title,\r\n      container: context.selector,\r\n      fragment: options.fragment,\r\n      timeout: options.timeout\r\n    }\r\n\r\n    if (options.push || options.replace) {\r\n      window.history.replaceState(pjax.state, container.title, container.url)\r\n    }\r\n\r\n    // Clear out any focused controls before inserting new page contents.\r\n    try {\r\n      document.activeElement.blur()\r\n    } catch (e) { }\r\n\r\n    if (container.title) document.title = container.title\r\n\r\n    fire('pjax:beforeReplace', [container.contents, options], {\r\n      state: pjax.state,\r\n      previousState: previousState\r\n    })\r\n    context.html(container.contents)\r\n\r\n    // FF bug: Won't autofocus fields that are inserted via JS.\r\n    // This behavior is incorrect. So if theres no current focus, autofocus\r\n    // the last field.\r\n    //\r\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\r\n    var autofocusEl = context.find('input[autofocus], textarea[autofocus]').last()[0]\r\n    if (autofocusEl && document.activeElement !== autofocusEl) {\r\n      autofocusEl.focus();\r\n    }\r\n\r\n    executeScriptTags(container.scripts)\r\n\r\n    var scrollTo = options.scrollTo\r\n\r\n    // Ensure browser scrolls to the element referenced by the URL anchor\r\n    if (hash) {\r\n      var name = decodeURIComponent(hash.slice(1))\r\n      var target = document.getElementById(name) || document.getElementsByName(name)[0]\r\n      if (target) scrollTo = $(target).offset().top\r\n    }\r\n\r\n    if (typeof scrollTo == 'number') $(window).scrollTop(scrollTo)\r\n\r\n    fire('pjax:success', [data, status, xhr, options])\r\n  }\r\n\r\n\r\n  // Initialize pjax.state for the initial page load. Assume we're\r\n  // using the container and options of the link we're loading for the\r\n  // back button to the initial page. This ensures good back button\r\n  // behavior.\r\n  if (!pjax.state) {\r\n    pjax.state = {\r\n      id: uniqueId(),\r\n      url: window.location.href,\r\n      title: document.title,\r\n      container: context.selector,\r\n      fragment: options.fragment,\r\n      timeout: options.timeout\r\n    }\r\n    window.history.replaceState(pjax.state, document.title)\r\n  }\r\n\r\n  // Cancel the current request if we're already pjaxing\r\n  abortXHR(pjax.xhr)\r\n\r\n  pjax.options = options\r\n  var xhr = pjax.xhr = $.ajax(options)\r\n\r\n  if (xhr.readyState > 0) {\r\n    if (options.push && !options.replace) {\r\n      // Cache current container element before replacing it\r\n      cachePush(pjax.state.id, cloneContents(context))\r\n\r\n      window.history.pushState(null, \"\", options.requestUrl)\r\n    }\r\n\r\n    fire('pjax:start', [xhr, options])\r\n    fire('pjax:send', [xhr, options])\r\n  }\r\n\r\n  return pjax.xhr\r\n}\r\n\r\n// Public: Reload current page with pjax.\r\n//\r\n// Returns whatever $.pjax returns.\r\nfunction pjaxReload(container, options) {\r\n  var defaults = {\r\n    url: window.location.href,\r\n    push: false,\r\n    replace: true,\r\n    scrollTo: false\r\n  }\r\n\r\n  return pjax($.extend(defaults, optionsFor(container, options)))\r\n}\r\n\r\n// Internal: Hard replace current state with url.\r\n//\r\n// Work for around WebKit\r\n//   https://bugs.webkit.org/show_bug.cgi?id=93506\r\n//\r\n// Returns nothing.\r\nfunction locationReplace(url) {\r\n  window.history.replaceState(null, \"\", pjax.state.url)\r\n  window.location.replace(url)\r\n}\r\n\r\n\r\nvar initialPop = true\r\nvar initialURL = window.location.href\r\nvar initialState = window.history.state\r\n\r\n// Initialize $.pjax.state if possible\r\n// Happens when reloading a page and coming forward from a different\r\n// session history.\r\nif (initialState && initialState.container) {\r\n  pjax.state = initialState\r\n}\r\n\r\n// Non-webkit browsers don't fire an initial popstate event\r\nif ('state' in window.history) {\r\n  initialPop = false\r\n}\r\n\r\n// popstate handler takes care of the back and forward buttons\r\n//\r\n// You probably shouldn't use pjax on pages with other pushState\r\n// stuff yet.\r\nfunction onPjaxPopstate(event) {\r\n\r\n  // Hitting back or forward should override any pending PJAX request.\r\n  if (!initialPop) {\r\n    abortXHR(pjax.xhr)\r\n  }\r\n\r\n  var previousState = pjax.state\r\n  var state = event.state\r\n  var direction\r\n\r\n  if (state && state.container) {\r\n    // When coming forward from a separate history session, will get an\r\n    // initial pop with a state we are already at. Skip reloading the current\r\n    // page.\r\n    if (initialPop && initialURL == state.url) return\r\n\r\n    if (previousState) {\r\n      // If popping back to the same state, just skip.\r\n      // Could be clicking back from hashchange rather than a pushState.\r\n      if (previousState.id === state.id) return\r\n\r\n      // Since state IDs always increase, we can deduce the navigation direction\r\n      direction = previousState.id < state.id ? 'forward' : 'back'\r\n    }\r\n\r\n    var cache = cacheMapping[state.id] || []\r\n    var container = $(cache[0] || state.container), contents = cache[1]\r\n\r\n    if (container.length) {\r\n      if (previousState) {\r\n        // Cache current container before replacement and inform the\r\n        // cache which direction the history shifted.\r\n        cachePop(direction, previousState.id, cloneContents(container))\r\n      }\r\n\r\n      var popstateEvent = $.Event('pjax:popstate', {\r\n        state: state,\r\n        direction: direction\r\n      })\r\n      container.trigger(popstateEvent)\r\n\r\n      var options = {\r\n        id: state.id,\r\n        url: state.url,\r\n        container: container,\r\n        push: false,\r\n        fragment: state.fragment,\r\n        timeout: state.timeout,\r\n        scrollTo: false\r\n      }\r\n\r\n      if (contents) {\r\n        container.trigger('pjax:start', [null, options])\r\n\r\n        pjax.state = state\r\n        if (state.title) document.title = state.title\r\n        var beforeReplaceEvent = $.Event('pjax:beforeReplace', {\r\n          state: state,\r\n          previousState: previousState\r\n        })\r\n        container.trigger(beforeReplaceEvent, [contents, options])\r\n        container.html(contents)\r\n\r\n        container.trigger('pjax:end', [null, options])\r\n      } else {\r\n        pjax(options)\r\n      }\r\n\r\n      // Force reflow/relayout before the browser tries to restore the\r\n      // scroll position.\r\n      container[0].offsetHeight\r\n    } else {\r\n      locationReplace(location.href)\r\n    }\r\n  }\r\n  initialPop = false\r\n}\r\n\r\n// Fallback version of main pjax function for browsers that don't\r\n// support pushState.\r\n//\r\n// Returns nothing since it retriggers a hard form submission.\r\nfunction fallbackPjax(options) {\r\n  var url = $.isFunction(options.url) ? options.url() : options.url,\r\n      method = options.type ? options.type.toUpperCase() : 'GET'\r\n\r\n  var form = $('<form>', {\r\n    method: method === 'GET' ? 'GET' : 'POST',\r\n    action: url,\r\n    style: 'display:none'\r\n  })\r\n\r\n  if (method !== 'GET' && method !== 'POST') {\r\n    form.append($('<input>', {\r\n      type: 'hidden',\r\n      name: '_method',\r\n      value: method.toLowerCase()\r\n    }))\r\n  }\r\n\r\n  var data = options.data\r\n  if (typeof data === 'string') {\r\n    $.each(data.split('&'), function(index, value) {\r\n      var pair = value.split('=')\r\n      form.append($('<input>', {type: 'hidden', name: pair[0], value: pair[1]}))\r\n    })\r\n  } else if ($.isArray(data)) {\r\n    $.each(data, function(index, value) {\r\n      form.append($('<input>', {type: 'hidden', name: value.name, value: value.value}))\r\n    })\r\n  } else if (typeof data === 'object') {\r\n    var key\r\n    for (key in data)\r\n      form.append($('<input>', {type: 'hidden', name: key, value: data[key]}))\r\n  }\r\n\r\n  $(document.body).append(form)\r\n  form.submit()\r\n}\r\n\r\n// Internal: Abort an XmlHttpRequest if it hasn't been completed,\r\n// also removing its event handlers.\r\nfunction abortXHR(xhr) {\r\n  if ( xhr && xhr.readyState < 4) {\r\n    xhr.onreadystatechange = $.noop\r\n    xhr.abort()\r\n  }\r\n}\r\n\r\n// Internal: Generate unique id for state object.\r\n//\r\n// Use a timestamp instead of a counter since ids should still be\r\n// unique across page loads.\r\n//\r\n// Returns Number.\r\nfunction uniqueId() {\r\n  return (new Date).getTime()\r\n}\r\n\r\nfunction cloneContents(container) {\r\n  var cloned = container.clone()\r\n  // Unmark script tags as already being eval'd so they can get executed again\r\n  // when restored from cache. HAXX: Uses jQuery internal method.\r\n  cloned.find('script').each(function(){\r\n    if (!this.src) jQuery._data(this, 'globalEval', false)\r\n  })\r\n  return [container.selector, cloned.contents()]\r\n}\r\n\r\n// Internal: Strip internal query params from parsed URL.\r\n//\r\n// Returns sanitized url.href String.\r\nfunction stripInternalParams(url) {\r\n  url.search = url.search.replace(/([?&])(_pjax|_)=[^&]*/g, '')\r\n  return url.href.replace(/\\?($|#)/, '$1')\r\n}\r\n\r\n// Internal: Parse URL components and returns a Locationish object.\r\n//\r\n// url - String URL\r\n//\r\n// Returns HTMLAnchorElement that acts like Location.\r\nfunction parseURL(url) {\r\n  var a = document.createElement('a')\r\n  a.href = url\r\n  return a\r\n}\r\n\r\n// Internal: Return the `href` component of given URL object with the hash\r\n// portion removed.\r\n//\r\n// location - Location or HTMLAnchorElement\r\n//\r\n// Returns String\r\nfunction stripHash(location) {\r\n  return location.href.replace(/#.*/, '')\r\n}\r\n\r\n// Internal: Build options Object for arguments.\r\n//\r\n// For convenience the first parameter can be either the container or\r\n// the options object.\r\n//\r\n// Examples\r\n//\r\n//   optionsFor('#container')\r\n//   // => {container: '#container'}\r\n//\r\n//   optionsFor('#container', {push: true})\r\n//   // => {container: '#container', push: true}\r\n//\r\n//   optionsFor({container: '#container', push: true})\r\n//   // => {container: '#container', push: true}\r\n//\r\n// Returns options Object.\r\nfunction optionsFor(container, options) {\r\n  // Both container and options\r\n  if ( container && options )\r\n    options.container = container\r\n\r\n  // First argument is options Object\r\n  else if ( $.isPlainObject(container) )\r\n    options = container\r\n\r\n  // Only container\r\n  else\r\n    options = {container: container}\r\n\r\n  // Find and validate container\r\n  if (options.container)\r\n    options.container = findContainerFor(options.container)\r\n\r\n  return options\r\n}\r\n\r\n// Internal: Find container element for a variety of inputs.\r\n//\r\n// Because we can't persist elements using the history API, we must be\r\n// able to find a String selector that will consistently find the Element.\r\n//\r\n// container - A selector String, jQuery object, or DOM Element.\r\n//\r\n// Returns a jQuery object whose context is `document` and has a selector.\r\nfunction findContainerFor(container) {\r\n  container = $(container)\r\n\r\n  if ( !container.length ) {\r\n    throw \"no pjax container for \" + container.selector\r\n  } else if ( container.selector !== '' && container.context === document ) {\r\n    return container\r\n  } else if ( container.attr('id') ) {\r\n    return $('#' + container.attr('id'))\r\n  } else {\r\n    throw \"cant get selector for pjax container!\"\r\n  }\r\n}\r\n\r\n// Internal: Filter and find all elements matching the selector.\r\n//\r\n// Where $.fn.find only matches descendants, findAll will test all the\r\n// top level elements in the jQuery object as well.\r\n//\r\n// elems    - jQuery object of Elements\r\n// selector - String selector to match\r\n//\r\n// Returns a jQuery object.\r\nfunction findAll(elems, selector) {\r\n  return elems.filter(selector).add(elems.find(selector));\r\n}\r\n\r\nfunction parseHTML(html) {\r\n  return $.parseHTML(html, document, true)\r\n}\r\n\r\n// Internal: Extracts container and metadata from response.\r\n//\r\n// 1. Extracts X-PJAX-URL header if set\r\n// 2. Extracts inline <title> tags\r\n// 3. Builds response Element and extracts fragment if set\r\n//\r\n// data    - String response data\r\n// xhr     - XHR response\r\n// options - pjax options Object\r\n//\r\n// Returns an Object with url, title, and contents keys.\r\nfunction extractContainer(data, xhr, options) {\r\n  var obj = {}, fullDocument = /<html/i.test(data)\r\n\r\n  // Prefer X-PJAX-URL header if it was set, otherwise fallback to\r\n  // using the original requested url.\r\n  var serverUrl = xhr.getResponseHeader('X-PJAX-URL')\r\n  obj.url = serverUrl ? stripInternalParams(parseURL(serverUrl)) : options.requestUrl\r\n\r\n  // Attempt to parse response html into elements\r\n  if (fullDocument) {\r\n    var $head = $(parseHTML(data.match(/<head[^>]*>([\\s\\S.]*)<\\/head>/i)[0]))\r\n    var $body = $(parseHTML(data.match(/<body[^>]*>([\\s\\S.]*)<\\/body>/i)[0]))\r\n  } else {\r\n    var $head = $body = $(parseHTML(data))\r\n  }\r\n\r\n  // If response data is empty, return fast\r\n  if ($body.length === 0)\r\n    return obj\r\n\r\n  // If there's a <title> tag in the header, use it as\r\n  // the page's title.\r\n  obj.title = findAll($head, 'title').last().text()\r\n\r\n  if (options.fragment) {\r\n    // If they specified a fragment, look for it in the response\r\n    // and pull it out.\r\n    if (options.fragment === 'body') {\r\n      var $fragment = $body\r\n    } else {\r\n      var $fragment = findAll($body, options.fragment).first()\r\n    }\r\n\r\n    if ($fragment.length) {\r\n      obj.contents = options.fragment === 'body' ? $fragment : $fragment.contents()\r\n\r\n      // If there's no title, look for data-title and title attributes\r\n      // on the fragment\r\n      if (!obj.title)\r\n        obj.title = $fragment.attr('title') || $fragment.data('title')\r\n    }\r\n\r\n  } else if (!fullDocument) {\r\n    obj.contents = $body\r\n  }\r\n\r\n  // Clean up any <title> tags\r\n  if (obj.contents) {\r\n    // Remove any parent title elements\r\n    obj.contents = obj.contents.not(function() { return $(this).is('title') })\r\n\r\n    // Then scrub any titles from their descendants\r\n    obj.contents.find('title').remove()\r\n\r\n    // Gather all script[src] elements\r\n    obj.scripts = findAll(obj.contents, 'script[src]').remove()\r\n    obj.contents = obj.contents.not(obj.scripts)\r\n  }\r\n\r\n  // Trim any whitespace off the title\r\n  if (obj.title) obj.title = $.trim(obj.title)\r\n\r\n  return obj\r\n}\r\n\r\n// Load an execute scripts using standard script request.\r\n//\r\n// Avoids jQuery's traditional $.getScript which does a XHR request and\r\n// globalEval.\r\n//\r\n// scripts - jQuery object of script Elements\r\n//\r\n// Returns nothing.\r\nfunction executeScriptTags(scripts) {\r\n  if (!scripts) return\r\n\r\n  var existingScripts = $('script[src]')\r\n\r\n  scripts.each(function() {\r\n    var src = this.src\r\n    var matchedScripts = existingScripts.filter(function() {\r\n      return this.src === src\r\n    })\r\n    if (matchedScripts.length) return\r\n\r\n    var script = document.createElement('script')\r\n    var type = $(this).attr('type')\r\n    if (type) script.type = type\r\n    script.src = $(this).attr('src')\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\n// Internal: History DOM caching class.\r\nvar cacheMapping      = {}\r\nvar cacheForwardStack = []\r\nvar cacheBackStack    = []\r\n\r\n// Push previous state id and container contents into the history\r\n// cache. Should be called in conjunction with `pushState` to save the\r\n// previous container contents.\r\n//\r\n// id    - State ID Number\r\n// value - DOM Element to cache\r\n//\r\n// Returns nothing.\r\nfunction cachePush(id, value) {\r\n  cacheMapping[id] = value\r\n  cacheBackStack.push(id)\r\n\r\n  // Remove all entries in forward history stack after pushing a new page.\r\n  trimCacheStack(cacheForwardStack, 0)\r\n\r\n  // Trim back history stack to max cache length.\r\n  trimCacheStack(cacheBackStack, pjax.defaults.maxCacheLength)\r\n}\r\n\r\n// Shifts cache from directional history cache. Should be\r\n// called on `popstate` with the previous state id and container\r\n// contents.\r\n//\r\n// direction - \"forward\" or \"back\" String\r\n// id        - State ID Number\r\n// value     - DOM Element to cache\r\n//\r\n// Returns nothing.\r\nfunction cachePop(direction, id, value) {\r\n  var pushStack, popStack\r\n  cacheMapping[id] = value\r\n\r\n  if (direction === 'forward') {\r\n    pushStack = cacheBackStack\r\n    popStack  = cacheForwardStack\r\n  } else {\r\n    pushStack = cacheForwardStack\r\n    popStack  = cacheBackStack\r\n  }\r\n\r\n  pushStack.push(id)\r\n  if (id = popStack.pop())\r\n    delete cacheMapping[id]\r\n\r\n  // Trim whichever stack we just pushed to to max cache length.\r\n  trimCacheStack(pushStack, pjax.defaults.maxCacheLength)\r\n}\r\n\r\n// Trim a cache stack (either cacheBackStack or cacheForwardStack) to be no\r\n// longer than the specified length, deleting cached DOM elements as necessary.\r\n//\r\n// stack  - Array of state IDs\r\n// length - Maximum length to trim to\r\n//\r\n// Returns nothing.\r\nfunction trimCacheStack(stack, length) {\r\n  while (stack.length > length)\r\n    delete cacheMapping[stack.shift()]\r\n}\r\n\r\n// Public: Find version identifier for the initial page load.\r\n//\r\n// Returns String version or undefined.\r\nfunction findVersion() {\r\n  return $('meta').filter(function() {\r\n    var name = $(this).attr('http-equiv')\r\n    return name && name.toUpperCase() === 'X-PJAX-VERSION'\r\n  }).attr('content')\r\n}\r\n\r\n// Install pjax functions on $.pjax to enable pushState behavior.\r\n//\r\n// Does nothing if already enabled.\r\n//\r\n// Examples\r\n//\r\n//     $.pjax.enable()\r\n//\r\n// Returns nothing.\r\nfunction enable() {\r\n  $.fn.pjax = fnPjax\r\n  $.pjax = pjax\r\n  $.pjax.enable = $.noop\r\n  $.pjax.disable = disable\r\n  $.pjax.click = handleClick\r\n  $.pjax.submit = handleSubmit\r\n  $.pjax.reload = pjaxReload\r\n  $.pjax.defaults = {\r\n    timeout: 650,\r\n    push: true,\r\n    replace: false,\r\n    type: 'GET',\r\n    dataType: 'html',\r\n    scrollTo: 0,\r\n    maxCacheLength: 20,\r\n    version: findVersion\r\n  }\r\n  $(window).on('popstate.pjax', onPjaxPopstate)\r\n}\r\n\r\n// Disable pushState behavior.\r\n//\r\n// This is the case when a browser doesn't support pushState. It is\r\n// sometimes useful to disable pushState for debugging on a modern\r\n// browser.\r\n//\r\n// Examples\r\n//\r\n//     $.pjax.disable()\r\n//\r\n// Returns nothing.\r\nfunction disable() {\r\n  $.fn.pjax = function() { return this }\r\n  $.pjax = fallbackPjax\r\n  $.pjax.enable = enable\r\n  $.pjax.disable = $.noop\r\n  $.pjax.click = $.noop\r\n  $.pjax.submit = $.noop\r\n  $.pjax.reload = function() { window.location.reload() }\r\n\r\n  $(window).off('popstate.pjax', onPjaxPopstate)\r\n}\r\n\r\n\r\n// Add the state property to jQuery's event object so we can use it in\r\n// $(window).bind('popstate')\r\nif ( $.inArray('state', $.event.props) < 0 )\r\n  $.event.props.push('state')\r\n\r\n// Is pjax supported by this browser?\r\n$.support.pjax =\r\n  window.history && window.history.pushState && window.history.replaceState &&\r\n  // pushState isn't reliable on iOS until 5.\r\n  !navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)\r\n\r\n$.support.pjax ? enable() : disable()\r\n\r\n})(jQuery);\r\n"]}